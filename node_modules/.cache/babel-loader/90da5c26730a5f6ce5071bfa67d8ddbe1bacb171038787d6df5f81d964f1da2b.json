{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AddGoogleMap\",\n  data() {\n    return {\n      center: {\n        lat: 39.7837304,\n        lng: -100.4458825\n      },\n      locationMarkers: [],\n      locPlaces: [],\n      existingPlace: null\n    };\n  },\n  props: {\n    user: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.locateGeoLocation();\n    this.initMarker([this.user.location.coordinates]);\n  },\n  methods: {\n    initMarker(loc) {\n      this.existingPlace = loc;\n    },\n    addLocationMarker() {\n      if (this.existingPlace) {\n        const marker = {\n          lat: this.existingPlace.geometry.location.lat(),\n          lng: this.existingPlace.geometry.location.lng()\n        };\n        this.locationMarkers.push({\n          position: marker\n        });\n        this.locPlaces.push(this.existingPlace);\n        this.center = marker;\n        this.existingPlace = null;\n      }\n    },\n    locateGeoLocation: function () {\n      navigator.geolocation.getCurrentPosition(res => {\n        this.center = {\n          lat: res.coords.latitude,\n          lng: res.coords.longitude\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","center","lat","lng","locationMarkers","locPlaces","existingPlace","props","user","type","Array","required","mounted","locateGeoLocation","initMarker","location","coordinates","methods","loc","addLocationMarker","marker","geometry","push","position","navigator","geolocation","getCurrentPosition","res","coords","latitude","longitude"],"sources":["src/components/maps.vue"],"sourcesContent":["<template>\n  <div class=\"w-[500px]\"> \n    <!-- <label>\n        <gmap-autocomplete @place_changed=\"initMarker\"></gmap-autocomplete>\n        <button @click=\"addLocationMarker\">Add</button>\n      </label> -->\n    <gmap-map :zoom=\"14\" :center=\"center\" style=\"width: 500%; height: 400px\">\n      <gmap-marker\n        :key=\"index\"\n        v-for=\"(m, index) in locationMarkers\"\n        :position=\"m.position\"\n        @click=\"center = m.position\"\n      ></gmap-marker>\n    </gmap-map>\n  </div>\n</template>\n   \n  <script>\nexport default {\n  name: \"AddGoogleMap\",\n  data() {\n    return {\n      center: {\n        lat: 39.7837304,\n        lng: -100.4458825,\n      },\n      locationMarkers: [],\n      locPlaces: [],\n      existingPlace: null,\n    };\n  },\n  props: {\n    user: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  mounted() {\n    this.locateGeoLocation();\n    this.initMarker([this.user.location.coordinates])\n  },\n\n  methods: {\n    initMarker(loc) {\n      this.existingPlace = loc;\n    },\n    addLocationMarker() {\n      if (this.existingPlace) {\n        const marker = {\n          lat: this.existingPlace.geometry.location.lat(),\n          lng: this.existingPlace.geometry.location.lng(),\n        };\n        this.locationMarkers.push({ position: marker });\n        this.locPlaces.push(this.existingPlace);\n        this.center = marker;\n        this.existingPlace = null;\n      }\n    },\n    locateGeoLocation: function () {\n      navigator.geolocation.getCurrentPosition((res) => {\n        this.center = {\n          lat: res.coords.latitude,\n          lng: res.coords.longitude,\n        };\n      });\n    },\n  },\n};\n</script>"],"mappings":";AAkBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,eAAA;MACAC,SAAA;MACAC,aAAA;IACA;EACA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,iBAAA;IACA,KAAAC,UAAA,OAAAN,IAAA,CAAAO,QAAA,CAAAC,WAAA;EACA;EAEAC,OAAA;IACAH,WAAAI,GAAA;MACA,KAAAZ,aAAA,GAAAY,GAAA;IACA;IACAC,kBAAA;MACA,SAAAb,aAAA;QACA,MAAAc,MAAA;UACAlB,GAAA,OAAAI,aAAA,CAAAe,QAAA,CAAAN,QAAA,CAAAb,GAAA;UACAC,GAAA,OAAAG,aAAA,CAAAe,QAAA,CAAAN,QAAA,CAAAZ,GAAA;QACA;QACA,KAAAC,eAAA,CAAAkB,IAAA;UAAAC,QAAA,EAAAH;QAAA;QACA,KAAAf,SAAA,CAAAiB,IAAA,MAAAhB,aAAA;QACA,KAAAL,MAAA,GAAAmB,MAAA;QACA,KAAAd,aAAA;MACA;IACA;IACAO,iBAAA,WAAAA,CAAA;MACAW,SAAA,CAAAC,WAAA,CAAAC,kBAAA,CAAAC,GAAA;QACA,KAAA1B,MAAA;UACAC,GAAA,EAAAyB,GAAA,CAAAC,MAAA,CAAAC,QAAA;UACA1B,GAAA,EAAAwB,GAAA,CAAAC,MAAA,CAAAE;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}