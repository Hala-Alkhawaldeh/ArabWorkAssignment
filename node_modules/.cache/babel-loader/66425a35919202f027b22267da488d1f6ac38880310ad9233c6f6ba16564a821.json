{"ast":null,"code":"import axios from \"axios\";\nimport doctorCard from \"./doctorCard.vue\";\nexport default {\n  components: {\n    doctorCard\n  },\n  data() {\n    return {\n      users: [],\n      currentPage: 1,\n      usersPerPage: 5\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\"https://randomuser.me/api/\", {\n          params: {}\n        });\n        this.users = response.data.results;\n        console.log(this.users);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // userLocation(user) {\n    //   const { coordinates } = user.location;\n    //   return [coordinates.latitude, coordinates.longitude];\n    // },\n    // showUserOnMap(user) {\n    //   // Set the selected user's location as the map's center\n    //   this.mapCenter = this.userLocation(user);\n    // },\n    nextPage() {\n      this.currentPage++;\n      this.usersPerPage = +5;\n      this.fetchUsers();\n    }\n  },\n  computed: {\n    //   mapCenter() {\n    //   // Calculate the center for the map\n    //   // You can initially set it to a default location\n    //   return [0, 0];\n    // },\n    // mapTileLayer() {\n    //   // Specify the map tile layer URL\n    //   return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    // },\n  },\n  created() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","doctorCard","components","data","users","currentPage","usersPerPage","methods","fetchUsers","response","get","params","results","console","log","error","nextPage","computed","created"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"flex\">\n    <div class=\"user-list\">\n      <div class=\"user-cards\">\n        <div class=\"search-result-blk my-10 container\">\n      <div class=\"grid grid-cols-1 gap-y-6 gap-x-14\" >\n        <div\n          v-for=\"user in users\"\n          :key=\"user.login.uuid\"\n          @click=\"showUserOnMap(user)\"\n        >\n          <doctor-card :user=\"user\"></doctor-card>\n          <!-- Display user card data -->\n        </div>\n      </div>\n        </div>\n        </div>\n      <button @click=\"nextPage\">Next</button>\n    </div>\n    <!-- <div class=\"map\">\n      <GmapMap\n  :center=\"{lat:10, lng:10}\"\n  :zoom=\"7\"\n  map-type-id=\"terrain\"\n  style=\"width: 500px; height: 300px\"\n>\n\n  <GmapMarker\n    :key=\"index\"\n    v-for=\"(m, index) in users\"\n    :position=\"[m.location.coordinates.latitude, m.location.coordinates.longitude]\"\n    :clickable=\"true\"\n    :draggable=\"true\"\n    @click=\"center=m.position\"\n  />\n</GmapMap>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport doctorCard from \"./doctorCard.vue\";\n\n\nexport default {\n  components: { doctorCard },\n  data() {\n    return {\n      users: [],\n      currentPage: 1,\n      usersPerPage: 5,\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\"https://randomuser.me/api/\", {\n          params: {\n            \n          },\n        });\n\n        this.users =response.data.results ;\n        console.log(this.users);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // userLocation(user) {\n    //   const { coordinates } = user.location;\n    //   return [coordinates.latitude, coordinates.longitude];\n    // },\n    // showUserOnMap(user) {\n    //   // Set the selected user's location as the map's center\n    //   this.mapCenter = this.userLocation(user);\n    // },\n    nextPage() {\n      this.currentPage++;\n      this.usersPerPage=+5;\n      this.fetchUsers();\n    },\n  },\n  computed: {\n  //   mapCenter() {\n  //   // Calculate the center for the map\n  //   // You can initially set it to a default location\n  //   return [0, 0];\n  // },\n  // mapTileLayer() {\n  //   // Specify the map tile layer URL\n  //   return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n  // },\n  },\n  created() {\n    this.fetchUsers();\n  },\n};\n</script>"],"mappings":"AAyCA,OAAAA,KAAA;AACA,OAAAC,UAAA;AAGA;EACAC,UAAA;IAAAD;EAAA;EACAE,KAAA;IACA;MACAC,KAAA;MACAC,WAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAT,KAAA,CAAAU,GAAA;UACAC,MAAA,GAEA;QACA;QAEA,KAAAP,KAAA,GAAAK,QAAA,CAAAN,IAAA,CAAAS,OAAA;QACAC,OAAA,CAAAC,GAAA,MAAAV,KAAA;MACA,SAAAW,KAAA;QACAF,OAAA,CAAAE,KAAA,CAAAA,KAAA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,SAAA;MACA,KAAAX,WAAA;MACA,KAAAC,YAAA;MACA,KAAAE,UAAA;IACA;EACA;EACAS,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACA;EACAC,QAAA;IACA,KAAAV,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}