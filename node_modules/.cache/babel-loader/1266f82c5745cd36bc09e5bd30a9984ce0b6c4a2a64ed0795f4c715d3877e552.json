{"ast":null,"code":"export default {\n  name: \"GMap\",\n  props: {},\n  data() {\n    return {\n      map: null,\n      center: null,\n      mapDivRef: null,\n      marker: null,\n      myLatLng: null,\n      locationName: null\n    };\n  },\n  mounted() {\n    // Load the Google Map script\n    const key = \"YOUR_API_KEY\"; // Replace with your Google Maps API key\n\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.setAttribute(\"src\", `https://maps.googleapis.com/maps/api/js?key=${key}&callback=initMap`);\n    googleMapScript.setAttribute(\"async\", \"\");\n    googleMapScript.setAttribute(\"defer\", \"\");\n    document.head.appendChild(googleMapScript);\n    this.locateGeoLocation();\n  },\n  methods: {\n    initMap(lat, lng) {\n      this.myLatLng = {\n        lat,\n        lng\n      };\n      this.map = new google.maps.Map(this.mapDivRef, {\n        mapTypeId: this.mapType,\n        zoom: this.zoom,\n        center: this.myLatLng\n      });\n      this.initMarker(this.myLatLng);\n    },\n    locateGeoLocation() {\n      navigator.geolocation.getCurrentPosition(res => {\n        this.center = {\n          lat: res.coords.latitude,\n          lng: res.coords.longitude\n        };\n        setTimeout(() => {\n          this.initMap(this.center.lat, this.center.lng);\n          this.getLocationName(this.center);\n        }, 3000);\n      });\n    },\n    getLocationName(latlng) {\n      let geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        location: latlng\n      }, (results, status) => {\n        if (status === \"OK\") {\n          if (results[1]) {\n            this.locationName = results[1].formatted_address;\n          } else {\n            console.log(\"No results found\");\n          }\n        }\n      });\n    },\n    initMarker(myLatLng) {\n      this.marker = new google.maps.Marker({\n        position: myLatLng,\n        map: this.map,\n        draggable: true,\n        title: \"Drag me!\"\n      });\n      google.maps.event.addListener(this.marker, \"dragend\", function (ev) {\n        // Handle marker drag end event\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","map","center","mapDivRef","marker","myLatLng","locationName","mounted","key","googleMapScript","document","createElement","setAttribute","head","appendChild","locateGeoLocation","methods","initMap","lat","lng","google","maps","Map","mapTypeId","mapType","zoom","initMarker","navigator","geolocation","getCurrentPosition","res","coords","latitude","longitude","setTimeout","getLocationName","latlng","geocoder","Geocoder","geocode","location","results","status","formatted_address","console","log","Marker","position","draggable","title","event","addListener","ev"],"sources":["src/components/gmap.vue"],"sourcesContent":["<template>\n  <div class=\"map\" ref=\"mapDivRef\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"GMap\",\n  props: {},\n  data() {\n    return {\n      map: null,\n      center: null,\n      mapDivRef: null,\n      marker: null,\n      myLatLng: null,\n      locationName: null,\n    };\n  },\n  mounted() {\n    // Load the Google Map script\n    const key = \"YOUR_API_KEY\"; // Replace with your Google Maps API key\n\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.setAttribute(\n      \"src\",\n      `https://maps.googleapis.com/maps/api/js?key=${key}&callback=initMap`\n    );\n    googleMapScript.setAttribute(\"async\", \"\");\n    googleMapScript.setAttribute(\"defer\", \"\");\n    document.head.appendChild(googleMapScript);\n\n    this.locateGeoLocation();\n  },\n  methods: {\n    initMap(lat, lng) {\n      this.myLatLng = { lat, lng };\n      this.map = new google.maps.Map(this.mapDivRef, {\n        mapTypeId: this.mapType,\n        zoom: this.zoom,\n        center: this.myLatLng,\n      });\n      this.initMarker(this.myLatLng);\n    },\n    locateGeoLocation() {\n      navigator.geolocation.getCurrentPosition((res) => {\n        this.center = { lat: res.coords.latitude, lng: res.coords.longitude };\n\n        setTimeout(() => {\n          this.initMap(this.center.lat, this.center.lng);\n          this.getLocationName(this.center);\n        }, 3000);\n      });\n    },\n    getLocationName(latlng) {\n      let geocoder = new google.maps.Geocoder();\n      geocoder.geocode({ location: latlng }, (results, status) => {\n        if (status === \"OK\") {\n          if (results[1]) {\n            this.locationName = results[1].formatted_address;\n          } else {\n            console.log(\"No results found\");\n          }\n        }\n      });\n    },\n    initMarker(myLatLng) {\n      this.marker = new google.maps.Marker({\n        position: myLatLng,\n        map: this.map,\n        draggable: true,\n        title: \"Drag me!\",\n      });\n\n      google.maps.event.addListener(this.marker, \"dragend\", function (ev) {\n        // Handle marker drag end event\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.map {\n  width: 100%;\n  height: 300px;\n  background-color: azure;\n}\n</style>"],"mappings":"AAKA;EACAA,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,MAAA;MACAC,SAAA;MACAC,MAAA;MACAC,QAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,MAAAC,GAAA;;IAEA,MAAAC,eAAA,GAAAC,QAAA,CAAAC,aAAA;IACAF,eAAA,CAAAG,YAAA,CACA,OACA,+CAAAJ,GAAA,mBACA;IACAC,eAAA,CAAAG,YAAA;IACAH,eAAA,CAAAG,YAAA;IACAF,QAAA,CAAAG,IAAA,CAAAC,WAAA,CAAAL,eAAA;IAEA,KAAAM,iBAAA;EACA;EACAC,OAAA;IACAC,QAAAC,GAAA,EAAAC,GAAA;MACA,KAAAd,QAAA;QAAAa,GAAA;QAAAC;MAAA;MACA,KAAAlB,GAAA,OAAAmB,MAAA,CAAAC,IAAA,CAAAC,GAAA,MAAAnB,SAAA;QACAoB,SAAA,OAAAC,OAAA;QACAC,IAAA,OAAAA,IAAA;QACAvB,MAAA,OAAAG;MACA;MACA,KAAAqB,UAAA,MAAArB,QAAA;IACA;IACAU,kBAAA;MACAY,SAAA,CAAAC,WAAA,CAAAC,kBAAA,CAAAC,GAAA;QACA,KAAA5B,MAAA;UAAAgB,GAAA,EAAAY,GAAA,CAAAC,MAAA,CAAAC,QAAA;UAAAb,GAAA,EAAAW,GAAA,CAAAC,MAAA,CAAAE;QAAA;QAEAC,UAAA;UACA,KAAAjB,OAAA,MAAAf,MAAA,CAAAgB,GAAA,OAAAhB,MAAA,CAAAiB,GAAA;UACA,KAAAgB,eAAA,MAAAjC,MAAA;QACA;MACA;IACA;IACAiC,gBAAAC,MAAA;MACA,IAAAC,QAAA,OAAAjB,MAAA,CAAAC,IAAA,CAAAiB,QAAA;MACAD,QAAA,CAAAE,OAAA;QAAAC,QAAA,EAAAJ;MAAA,IAAAK,OAAA,EAAAC,MAAA;QACA,IAAAA,MAAA;UACA,IAAAD,OAAA;YACA,KAAAnC,YAAA,GAAAmC,OAAA,IAAAE,iBAAA;UACA;YACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAnB,WAAArB,QAAA;MACA,KAAAD,MAAA,OAAAgB,MAAA,CAAAC,IAAA,CAAAyB,MAAA;QACAC,QAAA,EAAA1C,QAAA;QACAJ,GAAA,OAAAA,GAAA;QACA+C,SAAA;QACAC,KAAA;MACA;MAEA7B,MAAA,CAAAC,IAAA,CAAA6B,KAAA,CAAAC,WAAA,MAAA/C,MAAA,uBAAAgD,EAAA;QACA;MAAA,CACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}