{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AddGoogleMap\",\n  data() {\n    return {\n      center: {\n        lat: 39.7837304,\n        lng: -100.4458825\n      },\n      locationMarkers: [],\n      locPlaces: [],\n      existingPlace: null\n    };\n  },\n  props: {},\n  mounted() {\n    this.locateGeoLocation();\n  },\n  methods: {\n    initMarker(loc) {\n      this.existingPlace = loc;\n      this.addLocationMarker();\n    },\n    addLocationMarker() {\n      if (this.existingPlace) {\n        const marker = {\n          lat: Number(this.existingPlace.latitude),\n          lng: Number(this.existingPlace.longitude)\n        };\n        this.locationMarkers.push({\n          position: marker\n        });\n        this.locPlaces.push(this.existingPlace);\n        this.center = marker;\n        // this.existingPlace = null;\n      }\n    },\n\n    locateGeoLocation: function () {\n      navigator.geolocation.getCurrentPosition(res => {\n        this.center = {\n          lat: res.coords.latitude,\n          lng: res.coords.longitude\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","center","lat","lng","locationMarkers","locPlaces","existingPlace","props","mounted","locateGeoLocation","methods","initMarker","loc","addLocationMarker","marker","Number","latitude","longitude","push","position","navigator","geolocation","getCurrentPosition","res","coords"],"sources":["src/components/maps.vue"],"sourcesContent":["<template>\n    <div class=\"w-[500px]\"> \n      <label>\n          <gmap-autocomplete @place_changed=\"initMarker\"></gmap-autocomplete>\n          <button @click=\"addLocationMarker\">Add</button>\n        </label>\n      <gmap-map :zoom=\"14\" :center=\"center\" style=\"width: 500%; height: 400px\">\n        <gmap-marker\n          :key=\"index\"\n          v-for=\"(m, index) in locationMarkers\"\n          :position=\"m.position\"\n          @click=\"center = m.position\"\n        ></gmap-marker>\n      </gmap-map>\n    </div>\n  </template>\n     \n    <script>\n  export default {\n    name: \"AddGoogleMap\",\n    data() {\n      return {\n        center: {\n          lat: 39.7837304,\n          lng: -100.4458825,\n        },\n        locationMarkers: [],\n        locPlaces: [],\n        existingPlace: null,\n      };\n    },\n    props: {\n     \n    },\n  \n    mounted() {\n      this.locateGeoLocation();\n    },\n  \n    methods: {\n      initMarker(loc) {\n        this.existingPlace = loc;\n        this.addLocationMarker() \n      },\n        addLocationMarker() {\n            if (this.existingPlace) {\n          const marker = {\n            lat: Number(this.existingPlace.latitude),\n            lng: Number(this.existingPlace.longitude),\n          };\n        \n          this.locationMarkers.push({ position: marker });\n          this.locPlaces.push(this.existingPlace);\n          this.center = marker;\n          // this.existingPlace = null;\n      \n        }\n        },\n      \n      locateGeoLocation: function () {\n        navigator.geolocation.getCurrentPosition((res) => {\n          this.center = {\n            lat: res.coords.latitude,\n            lng: res.coords.longitude,\n          };\n        });\n      },\n    },\n  };\n  </script>"],"mappings":";AAkBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,eAAA;MACAC,SAAA;MACAC,aAAA;IACA;EACA;EACAC,KAAA,GAEA;EAEAC,QAAA;IACA,KAAAC,iBAAA;EACA;EAEAC,OAAA;IACAC,WAAAC,GAAA;MACA,KAAAN,aAAA,GAAAM,GAAA;MACA,KAAAC,iBAAA;IACA;IACAA,kBAAA;MACA,SAAAP,aAAA;QACA,MAAAQ,MAAA;UACAZ,GAAA,EAAAa,MAAA,MAAAT,aAAA,CAAAU,QAAA;UACAb,GAAA,EAAAY,MAAA,MAAAT,aAAA,CAAAW,SAAA;QACA;QAEA,KAAAb,eAAA,CAAAc,IAAA;UAAAC,QAAA,EAAAL;QAAA;QACA,KAAAT,SAAA,CAAAa,IAAA,MAAAZ,aAAA;QACA,KAAAL,MAAA,GAAAa,MAAA;QACA;MAEA;IACA;;IAEAL,iBAAA,WAAAA,CAAA;MACAW,SAAA,CAAAC,WAAA,CAAAC,kBAAA,CAAAC,GAAA;QACA,KAAAtB,MAAA;UACAC,GAAA,EAAAqB,GAAA,CAAAC,MAAA,CAAAR,QAAA;UACAb,GAAA,EAAAoB,GAAA,CAAAC,MAAA,CAAAP;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}