{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AddGoogleMap\",\n  data() {\n    return {\n      center: {\n        lat: 39.7837304,\n        lng: -100.4458825\n      },\n      locationMarkers: [],\n      locPlaces: [],\n      existingPlace: null,\n      user: null\n    };\n  },\n  mounted() {\n    this.locateGeoLocation();\n  },\n  methods: {\n    initMarker(user) {\n      this.user = user;\n      this.existingPlace = user.location.coordinates;\n      this.addLocationMarker();\n    },\n    addLocationMarker() {\n      if (this.existingPlace) {\n        const marker = {\n          lat: Number(this.existingPlace.latitude),\n          lng: Number(this.existingPlace.longitude)\n        };\n        this.locationMarkers.push({\n          position: marker\n        });\n        this.locPlaces.push(this.existingPlace);\n        this.center = marker;\n        // this.existingPlace = null;\n      }\n    },\n\n    locateGeoLocation: function () {\n      navigator.geolocation.getCurrentPosition(res => {\n        this.center = {\n          lat: res.coords.latitude,\n          lng: res.coords.longitude\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","center","lat","lng","locationMarkers","locPlaces","existingPlace","user","mounted","locateGeoLocation","methods","initMarker","location","coordinates","addLocationMarker","marker","Number","latitude","longitude","push","position","navigator","geolocation","getCurrentPosition","res","coords"],"sources":["src/components/maps.vue"],"sourcesContent":["<template>\n  <div class=\"border border-[#E5E7EB] p-4 bg-white mt-5 w-full flex flex-col \">\n    <gmap-map :zoom=\"14\" :center=\"center\" class=\"w-full h-[600px]\">\n      <gmap-marker\n        :key=\"index\"\n        v-for=\"(m, index) in locationMarkers\"\n        :position=\"m.position\"\n        @click=\"center = m.position\"\n      ></gmap-marker>\n    </gmap-map>\n    <div v-if=\"user\" class=\"location flex border-t-2 px-4 py-4 items-center\">\n        <div class=\"bg-[#E6F7FF] rounded-full w-[20px] h-[20px] mx-2\">\n          <img\n            src=\"/img/location.svg\"\n            alt=\"user\"\n            width=\"18\"\n            height=\"18\"\n            class=\"w-[18px] h-[18px]\"\n          />\n        </div>\n        <div class=\"name text-sm font-medium text-accentColor2\">\n          {{ user.location.country }},{{ user.location.city }},\n          {{ user.location.street.name }}\n        </div>\n      </div>\n  </div>\n</template>\n     \n    <script>\nexport default {\n  name: \"AddGoogleMap\",\n  data() {\n    return {\n      center: {\n        lat: 39.7837304,\n        lng: -100.4458825,\n      },\n      locationMarkers: [],\n      locPlaces: [],\n      existingPlace: null,\n      user: null,\n    };\n  },\n  mounted() {\n    this.locateGeoLocation();\n  },\n\n  methods: {\n    initMarker(user) {\n      this.user = user;\n      this.existingPlace = user.location.coordinates;\n      this.addLocationMarker();\n    },\n    addLocationMarker() {\n      if (this.existingPlace) {\n        const marker = {\n          lat: Number(this.existingPlace.latitude),\n          lng: Number(this.existingPlace.longitude),\n        };\n\n        this.locationMarkers.push({ position: marker });\n        this.locPlaces.push(this.existingPlace);\n        this.center = marker;\n        // this.existingPlace = null;\n      }\n    },\n\n    locateGeoLocation: function () {\n      navigator.geolocation.getCurrentPosition((res) => {\n        this.center = {\n          lat: res.coords.latitude,\n          lng: res.coords.longitude,\n        };\n      });\n    },\n  },\n};\n</script>"],"mappings":";AA6BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,eAAA;MACAC,SAAA;MACAC,aAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,iBAAA;EACA;EAEAC,OAAA;IACAC,WAAAJ,IAAA;MACA,KAAAA,IAAA,GAAAA,IAAA;MACA,KAAAD,aAAA,GAAAC,IAAA,CAAAK,QAAA,CAAAC,WAAA;MACA,KAAAC,iBAAA;IACA;IACAA,kBAAA;MACA,SAAAR,aAAA;QACA,MAAAS,MAAA;UACAb,GAAA,EAAAc,MAAA,MAAAV,aAAA,CAAAW,QAAA;UACAd,GAAA,EAAAa,MAAA,MAAAV,aAAA,CAAAY,SAAA;QACA;QAEA,KAAAd,eAAA,CAAAe,IAAA;UAAAC,QAAA,EAAAL;QAAA;QACA,KAAAV,SAAA,CAAAc,IAAA,MAAAb,aAAA;QACA,KAAAL,MAAA,GAAAc,MAAA;QACA;MACA;IACA;;IAEAN,iBAAA,WAAAA,CAAA;MACAY,SAAA,CAAAC,WAAA,CAAAC,kBAAA,CAAAC,GAAA;QACA,KAAAvB,MAAA;UACAC,GAAA,EAAAsB,GAAA,CAAAC,MAAA,CAAAR,QAAA;UACAd,GAAA,EAAAqB,GAAA,CAAAC,MAAA,CAAAP;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}